package main_test

import (
	"encoding/hex"
	"fmt"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"os"
	"testing"
)

func TestName(t *testing.T) {
	f, err := os.Open("./abi.json")
	if err != nil {
		return
	}
	jsonABI, _ := abi.JSON(f)
	req := `0x1fad948c0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000ae37d8c4e4115261444b9f2d3772fbaa6829dd33000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000003043651156537c97ff985283b56382fa434346cf000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000260000000000000000000000000000000000000000000000000000000000000c350000000000000000000000000000000000000000000000000000000000007396e000000000000000000000000000000000000000000000000000000000000cfb00000000000000000000000000000000000000000000000000000000342770c000000000000000000000000000000000000000000000000000000000005f5e1000000000000000000000000000000000000000000000000000000000000000440000000000000000000000000000000000000000000000000000000000000052000000000000000000000000000000000000000000000000000000000000000d84e7c58d438f1584f577c16bce0b4f5db23f2ff15f45288080000000000000000000000000576a174d229e3cfa37253523e645a78a0c91b57000000000000000000000000127e75b2b77501d69cb240038f2f784126801b1f000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a42763604f000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000028f7d2a7a59e942210701aa792ce72a2571f47cf00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000044095ea7b300000000000000000000000087b0fcd668c2711755f2921606aa75aaf2d8c01f00000000000000000000000000000000000000000000003635c9adc5dea00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b587b0fcd668c2711755f2921606aa75aaf2d8c01f00000000000000000000000028f7d2a7a59e942210701aa792ce72a2571f47cf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064a69c94321e40a73f871ccabf2abd40fdb7073956c97a1c9758c23672e27c6fce64207c46d6d1c47620d316af93c9842252df5afdaa2f7fb46aced8d62a3e58cb21c7da1b000000000000000000000000000000000000000000000000000000000000000000000000000000000000770000127e75b2b77501d69cb240038f2f784126801b1f0000000000000000000000000000000000000000000000000000000000000041984d0d1d4e5a771075f2232022365e8cdc7ce3fb6c7d5d32e577f320889afd553283867b1823daf44d0acb182fe7b43cad7506101651dead4c81e47ec6fcb0951c000000000000000000`

	// decode txInput method signature
	decodedSig, err := hex.DecodeString(req[2:10])
	if err != nil {
		t.Fatal(err)
		return
	}
	// recover Method from signature and ABI
	method, err := jsonABI.MethodById(decodedSig)
	if err != nil {
		t.Fatal(err)
		return
	}

	// decode txInput Payload
	decodedData, err := hex.DecodeString(req[10:])
	if err != nil {
		t.Fatal(err)
		return
	}
	unpack := map[string]interface{}{}
	err = method.Inputs.UnpackIntoMap(unpack, decodedData)
	if err != nil {
		t.Fatal(err)
		return
	}
	fmt.Println(unpack)

}
